using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Xml.Linq;

namespace Methods
{
    public class addition
    {

        // This method takes two integers and returns their sum.
        // It is a simple example of a method that performs a calculation.
        // The method is static, meaning it can be called without creating an instance of the class.}
        public static double Add(double x, double y)
        {
            return x + y;
        }
    }

    public class Subtraction
    {
        // This method takes two integers and returns their difference.
        // It is a simple example of a method that performs a calculation.
        // The method is static, meaning it can be called without creating an instance of the class.
        public static double Subtract(double x, double y)
        {
            return x - y;
        }
    }

    public class Multiplication
    {
        // This method takes two integers and returns their product.
        // It is a simple example of a method that performs a calculation.
        // The method is static, meaning it can be called without creating an instance of the class.
        public static double Multiply(double x, double y)
        {
            return x * y;
        }
    }

    public class Division
    {
        // This method takes two integers and returns their quotient.
        // It is a simple example of a method that performs a calculation.
        // The method is static, meaning it can be called without creating an instance of the class.
        public static double Divide(double x, double y)
        {
            if (y == 0)
                throw new DivideByZeroException("Cannot divide by zero.");
            return (double)x / y;
        }
    }

    public class kvadratrod
    {
        // This method takes a double and returns its square root.
        // It is a simple example of a method that performs a calculation.
        // The method is static, meaning it can be called without creating an instance of the class.
        public static double CalculateSquareRoot(double x)
        {
            if (x < 0)
                throw new ArgumentException("Cannot calculate square root of a negative number.");
            return Math.Sqrt(x);
        }
    }
    public class Potens
    {
        // This method takes two doubles and returns the result of raising the first to the power of the second.
        // It is a simple example of a method that performs a calculation.
        // The method is static, meaning it can be called without creating an instance of the class.
        public static double CalculatePower(double x, double y)
        {
            return Math.Pow(x, y);
        }
    }
    public class procentregning
    {
        // This method takes two doubles and returns the percentage of the first number relative to the second.
        // It is a simple example of a method that performs a calculation.
        // The method is static, meaning it can be called without creating an instance of the class.
        public static double CalculatePercentage(double x, double y)
        {
            if (y == 0)
                throw new DivideByZeroException("Cannot calculate percentage with zero as the base.");
            return (x / y) * 100;
        }
    }
}
